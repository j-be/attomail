name: Compile and release

on:
  push:
    tags:
    - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Store Release url
      run: |
        echo "$upload_url" > ./upload_url
      env:
        upload_url: ${{ steps.create_release.outputs.upload_url }}

    - uses: actions/upload-artifact@v1
      with:
        path: ./upload_url
        name: upload_url

  build-armhf:
    needs: release
    runs-on: ubuntu-latest

    steps:
    - name: install dependencies
      run: |
        sudo apt update
        sudo apt install crossbuild-essential-armhf
    - uses: actions/checkout@v1
    - name: make
      run: CC="arm-linux-gnueabihf-gcc" make USERNAME=status attomail

    - name: Download URL
      uses: actions/download-artifact@v1
      with:
        name: upload_url
        path: ./
    - id: set_upload_url
      run: |
        upload_url=`cat ./upload_url`
        echo ::set-output name=upload_url::$upload_url

    - name: Upload to Release
      id: upload_to_release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.set_upload_url.outputs.upload_url }}
        asset_path: target/attomail
        asset_name: attomail_armhf
        asset_content_type: application/octet-stream

  build-amd64:
    needs: release
    runs-on: ubuntu-latest

    steps:
    - name: install dependencies
      run: |
        sudo apt update
        sudo apt install build-essential
    - uses: actions/checkout@v1
    - name: make
      run: make USERNAME=status attomail

    - name: Download URL
      uses: actions/download-artifact@v1
      with:
        name: upload_url
        path: ./
    - id: set_upload_url
      run: |
        upload_url=`cat ./upload_url`
        echo ::set-output name=upload_url::$upload_url

    - name: Upload to Release
      id: upload_to_release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.set_upload_url.outputs.upload_url }}
        asset_path: target/attomail
        asset_name: attomail_amd64
        asset_content_type: application/octet-stream
